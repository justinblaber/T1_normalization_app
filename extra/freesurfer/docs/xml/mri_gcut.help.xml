<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE help [
<!ENTITY lt "#38;#60;">
<!ENTITY gt "&#62;">
<!ENTITY amp "&#38;#38;">
<!ELEMENT help (name , synopsis , description , arguments+ , outputs* , example* , bugs* , reporting* , see-also*)*>
<!ELEMENT name (#PCDATA)>
<!ELEMENT synopsis (#PCDATA)>
<!ELEMENT description (#PCDATA)>
<!ELEMENT arguments (positional* , required-flagged* , optional-flagged*)*>
<!ELEMENT positional (intro* , argument* , explanation*)*>
<!ELEMENT required-flagged (intro* , argument* , explanation*)*>
<!ELEMENT optional-flagged (intro* , argument* , explanation*)*>
<!ELEMENT intro (#PCDATA)>
<!ELEMENT argument (#PCDATA)>
<!ELEMENT explanation (#PCDATA)>
<!ELEMENT outputs (output* , explanation*)>
<!ELEMENT output (#PCDATA)>
<!ELEMENT example (#PCDATA)>
<!ELEMENT bugs (#PCDATA)>
<!ELEMENT reporting (#PCDATA)>
<!ELEMENT see-also (#PCDATA)>
]>

<help>
	<name>mri_gcut</name>
	<synopsis>mri_gcut [-110|-mult &lt;filename&gt;|-T &lt;value&gt;] in_filename out_filename</synopsis>
	<description>Skull stripping algorithm based on graph cuts.

The algorithm consists of four main steps. In step 1, a conservative white matter (WM) mask is estimated using region growing. In step 2, the image is thresholded at the level proportional to intensity of WM, where the latter is estimated by averaging voxels with WM mask obtained in step 1. The thresholded image will contain brain and non-brain structures connected to each other by a set of (hopefully) narrow connections. In step 3, an undirected graph is defined on the image and subsequently partitioned into two portions using graph cuts approach. In the last step, post processing is applied to regain CSF and partial volume voxels that were lost during thresholding. For more details, see [1]

When the algorithm is applied in the context of FreeSurfer pipeline, eg. T1.mgz, one can choose to use voxels with intensity 110 in T1.mgz as the WM mask, rather than estimating the mask from the image by region growing.

The memory needed to process a standard 256*256*256 .mgz file is about 1GB ~ 1.5GB.

[1] S.A. Sadananthan, W. Zheng, M.W.L. Chee, and V. Zagorodnov,
'Skull Stripping Using Graph Cuts', Neuroimage, 2009</description>
  <arguments>
    <positional>
      <argument>in_filename</argument>
      <explanation>name of the file that contains brain volume, eg. T1.mgz</explanation>
      <argument>out_filename</argument>
      <explanation>name given to output file, eg. brainmask.auto.mgz</explanation>
    </positional>
    <required-flagged>
      <argument>-110</argument>
      <explanation>use voxels with intensity 110 as white matter mask (when applied on T1.mgz, FreeSurfer only)</explanation>
      <argument>-mult &lt;filename&gt;</argument>
      <explanation>If there exists a skull-stripped volume specified by the filename arg, such as that created by 'mri_watershed', the skull-stripped 'in_filename' and 'filename' will be intersected and the intersection stored in 'out_filename'. This approach will produce cleaner skull-strip, that is less likely to result in subsequent pial surface overgrowth, see [1].</explanation>
      <argument>-T &lt;value&gt;</argument>
      <explanation>set threshold to value (%) of WM intensity, the value should be &gt;0 and &lt;1; larger values would correspond to cleaner skull-strip but higher chance of brain erosion. Default is set conservatively at 0.40, which provide approx. the same negligible level of brain erosion as 'mri_watershed'.</explanation>
    </required-flagged>
    <optional-flagged>
      <intro>None.</intro>
    </optional-flagged>
  </arguments>
  <reporting>Report bugs to &lt;freesurfer@nmr.mgh.harvard.edu&gt;</reporting>
</help>

