<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE help [
<!ENTITY lt "#38;#60;">
<!ENTITY gt "&#62;">
<!ENTITY amp "&#38;#38;">
<!ELEMENT help (name , synopsis , description , arguments+ , outputs* , example* , bugs* , reporting* , see-also*)*>
<!ELEMENT name (#PCDATA)>
<!ELEMENT synopsis (#PCDATA)>
<!ELEMENT description (#PCDATA)>
<!ELEMENT arguments (positional* , required-flagged* , optional-flagged*)*>
<!ELEMENT positional (intro* , argument* , explanation*)*>
<!ELEMENT required-flagged (intro* , argument* , explanation*)*>
<!ELEMENT optional-flagged (intro* , argument* , explanation*)*>
<!ELEMENT intro (#PCDATA)>
<!ELEMENT argument (#PCDATA)>
<!ELEMENT explanation (#PCDATA)>
<!ELEMENT outputs (output* , explanation*)>
<!ELEMENT output (#PCDATA)>
<!ELEMENT example (#PCDATA)>
<!ELEMENT bugs (#PCDATA)>
<!ELEMENT reporting (#PCDATA)>
<!ELEMENT see-also (#PCDATA)>
]>

<help>
	<name>mri_em_register</name>
	<synopsis>mri_em_register [options] &lt;in brain volume&gt; &lt;template gca&gt; &lt;output transform name&gt;</synopsis>
	<description>This program creates a tranform in lta format</description>
  <arguments>
    <positional>
      <argument>&lt;in brain volume&gt;</argument>
      <explanation>input volume</explanation>
      <argument>&lt;template gca&gt;</argument>
      <explanation>template gca</explanation>
      <argument>&lt;output transform name&gt;</argument>
      <explanation>output transform</explanation>
    </positional>
    <required-flagged>
      <intro>None</intro>
    </required-flagged>
    <optional-flagged> 
      <argument>-dist distance</argument>
      <argument>-nomap</argument>
      <argument>-flash</argument>
      <explanation>use FLASH forward model to predict intensity values</explanation>
      <argument>-mask &lt;volname&gt;</argument>
      <explanation>use volname as a mask</explanation>
      <argument>-skull</argument>
      <explanation>align to atlas containing skull (uns=5)</explanation>
      <argument>-uns nbrspacing</argument>
      <explanation>align to atlas containing skull setting unknown_nbr_spacing = nbrspacing</explanation>
      <argument>-diag diagfile</argument>
      <explanation>open diagfile for writing</explanation>
      <argument>-debug_voxel x y z</argument>
      <explanation>debug voxel (x, y, z)</explanation>
      <argument>-debug_label label</argument>
      <explanation>debug label (label)</explanation>
      <argument>-tr TR</argument>
      <explanation>use TR msec</explanation>
      <argument>-te TE</argument>
      <explanation>use TE msec</explanation>
      <argument>-alpha alpha</argument>
      <explanation>use alpha degrees</explanation>
      <argument>-example T1 seg</argument>
      <explanation>use T1 and seg as example T1 and segmentations respectively</explanation>
      <argument>-samples fname</argument>
      <explanation>write control points to fname</explanation>
      <argument>-fsamples fname</argument>
      <explanation>write transformed control points to fname</explanation>
      <argument>-nsamples fname</argument>
      <explanation>write transformed normalization control points to fname</explanation>
      <argument>-contrast</argument>
      <explanation>use contrast to find labels</explanation>
      <argument>-flash_parms parameterfile</argument>
      <explanation>use FLASH forward model and tissue parms in parameterfile to predict intensity values</explanation>
      <argument>-transonly</argument>
      <explanation>only compute translation parameters</explanation>
      <argument>-write_mean fname</argument>
      <explanation>write gca means to fname</explanation>
      <argument>-prior min_prior</argument>
      <explanation>use prior threshold min_prior</explanation>
      <argument>-spacing &lt;int&gt;</argument>
      <explanation>use max GCA spacing</explanation>
      <argument>-scales &lt;int&gt;</argument>
      <explanation>find optimal linear transform over int scales</explanation>
      <argument>-novar</argument>
      <explanation>do not use variance estimates</explanation>
      <argument>-dt dt</argument>
      <argument>-tol tol</argument>
      <argument>-center</argument>
      <explanation>use GCA centroid as origin of transform</explanation>
      <argument>-noscale</argument>
      <explanation>disable scaling</explanation>
      <argument>-noiscale</argument>
      <explanation>disable intensity scaling</explanation>
      <argument>-num num_xforms</argument>
      <explanation>find a total of num_xforms linear transforms</explanation>
      <argument>-area area</argument>
      <argument>-nlarea nlarea</argument>
      <argument>-levels levels</argument>
      <argument>-intensity intensity</argument>
      <argument>-reduce nreductions</argument>
      <explanation>reduce input images nreductions times before aligning</explanation>
      <argument>-nsamples nsamples</argument>
      <explanation>using n samples of GCA</explanation>
      <argument>-norm fname</argument>
      <explanation>normalize intensity and write to fname</explanation>
      <argument>-trans max_trans</argument>
      <explanation>setting max translation search range to be max_trans</explanation>
      <argument>-steps max_angles</argument>
      <explanation>taking max_angles angular steps</explanation>
      <argument>-l xform long_reg</argument>
      <explanation>Longitudinal: read previously computed atlas xform and apply registration long_reg</explanation>
      <argument>-f cpfile</argument>
      <explanation>read manually defined control points from cpfile</explanation>
      <argument>-d tx ty tz</argument>
      <argument>-r rx ry rz</argument>
      <argument>-t xform</argument>
      <explanation>using previously computed transform xform</explanation>
      <argument>-b blur_sigma</argument>
      <explanation>blurring input image with sigma=blur_sigma</explanation>
      <argument>-v diagno</argument>
      <argument>-s max_angles</argument>
      <argument>-max_angle max_angle</argument>
      <explanation>max_angle for rotational search in radians (def=15 deg)</explanation>
      <argument>-n niters</argument>
      <explanation>niterations = niters</explanation>
      <argument>-w write_iters</argument>
      <explanation>write iterations = write_iters</explanation>
      <argument>-p ctl_point_pct</argument>
      <explanation>use top pct percent wm points as control points</explanation>
      <argument>-m momentum</argument>
      <explanation>set momentum</explanation>
    </optional-flagged>
  </arguments>
  <outputs>
    <output>tranform</output>
    <explanation>transform in lta format</explanation>
  </outputs>
	<example>mri_em_register -mask subject1/mri/brain subject1/mri/nu single_one.gca subject1/mri/transforms/talairach_one.lta</example>
  <bugs>None</bugs>
  <reporting>Report bugs to &lt;freesurfer@nmr.mgh.harvard.edu&gt;</reporting>
</help>